load("@bazel-orfs//:openroad.bzl", "orfs_flow", "orfs_synth")

BLACKBOXES = [
    "aes_sbox",
    "aes_key_expand_128",
    "aes_cipher_top",
]

[orfs_synth(
    name = "{name}_netlist_synth".format(name = name),
    arguments = {
        "SDC_FILE": "$(location :constraint.sdc)",
        "SYNTH_BLACKBOXES": " ".join([b for b in BLACKBOXES if b != name]),
    },
    data = [":constraint.sdc"],
    module_top = name,
    variant = "netlist",
    verilog_files = ["//flow/designs/src/aes:verilog"],
) for name in BLACKBOXES]

[filegroup(
    name = "{name}_netlist".format(name = name),
    srcs = ["{name}_netlist_synth".format(name = name)],
    output_group = "1_synth.v",
) for name in BLACKBOXES]

filegroup(
    name = "netlists",
    srcs = [":{}_netlist".format(name) for name in BLACKBOXES],
)

orfs_flow(
    name = "aes_cipher_top",
    arguments = {
        "ABC_AREA": "1",
        "CORE_UTILIZATION": "40",
        "CORE_ASPECT_RATIO": "1",
        "CORE_MARGIN": "2",
        "PLACE_DENSITY": "0.65",
        "TNS_END_PERCENT": "100",
    },
    sources = {
        "SDC_FILE": [":constraint.sdc"],
        "SYNTH_NETLIST_FILES": [":netlists"],
    },
    top = "aes_cipher_top",
)
