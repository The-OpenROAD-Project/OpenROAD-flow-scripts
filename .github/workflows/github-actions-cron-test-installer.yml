name: Test DependencyInstaller script
on:
  schedule:
  - cron: "0 8 * * SUN"
  push:
    paths:
      - 'etc/DependencyInstaller.sh'
      - '.github/workflows/github-actions-cron-test-installer.yml'
  pull_request:
    paths:
      - 'etc/DependencyInstaller.sh'
      - '.github/workflows/github-actions-cron-test-installer.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:     
  testInstaller:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu:20.04", "ubuntu:22.04", "centos:centos7", "debian:buster", "debian:bullseye"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
    steps:
      - name: Setup
        run: |
          if [ "${{ matrix.os }}" != "centos:centos7" ]; then 
            apt-get update
            apt-get -y install git
          else
            yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
            yum -y install git
          fi
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout repository code with submodules
        run: |
          git config --global --add safe.directory '*'
          git submodule update --init
      - name: Runs installer
        run: |
          ./etc/DependencyInstaller.sh
          if [ "${{ matrix.os }}" == "centos:centos7" ]; then
            . /opt/rh/llvm-toolset-7.0/enable
            . /opt/rh/devtoolset-8/enable
          fi
      - name: Build project
        run: |
          ./build_openroad.sh --local
      - name: Test build
        run: |
          . ./setup_env.sh
          yosys -help
          openroad -help
          cd flow
          make
  testinstaller-macos:
    if: github.repository_owner != 'The-OpenROAD-Project' && github.repository_owner != 'The-OpenROAD-Project-private' && github.repository_owner != 'The-OpenROAD-Project-staging'
    strategy:
      fail-fast: false
    runs-on: macos-latest
    steps:
      - name: Setup xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Runs installer
        run: |
          ./etc/DependencyInstaller.sh
      - name: Build project
        run: |
          ./build_openroad.sh --local
      - name: Test build
        run: |
          . ./setup_env.sh
          yosys -help
          openroad -help
          cd flow
          make